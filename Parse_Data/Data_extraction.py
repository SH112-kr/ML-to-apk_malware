from androguard.core.bytecodes.apk import APK
from androguard.session import Session
from androguard.core.bytecodes.dvm import DalvikVMFormat
from androguard.misc import AnalyzeAPK
from androguard.core.analysis.analysis import ExternalMethod, StringAnalysis
import hashlib
import os
import csv
import numpy as np
import argparse
import pandas as pd
import apk_perm_list 


def read_csv(): 
    perm_list = apk_perm_list.list
    return perm_list    #퍼미션 카테고리 정보 파싱


def parse_apk_permission(sample_dir,perm_list):
    sample_list = get_sample_by_dir(sample_dir)
    apk_perm_ext = []

    for i in sample_list:
        try:
            apkf = APK(i)
            Perm = apkf.get_permissions()
            Perm2 = []
            for s in Perm:
                if s in perm_list:
                    Perm2.append(s)

            apk_perm_ext.append([Perm2])
        except:
            pass
    #print(apk_perm_ext[0])
    return apk_perm_ext #악성 샘플에 대한 권한 데이터 반환 (리스트)


def get_sample_by_dir(dir):
    """샘플 디렉토리 주소 반환"""
    sample_list = []
    sample_apk_folder = os.listdir(dir)
    for i in sample_apk_folder:
        sample_list.append(dir+"\\"+i)
    
    return sample_list # 샘플이 존재하는 주소지 정보 반호나 (리스트)

def compare_perm_apk(sample_dir,perm_list):
    """ apk 권한이 존재하는지 확인 이후 포맷팅 리턴"""
    apk_perm_check = [] #apk 권한 체크 1행 이후 기입할 포맷팅 정보 
    apk_perm_ext = parse_apk_permission(sample_dir,perm_list)
    apk_perm_ext2 = []
    
            
    for s in apk_perm_ext:
        apk_perm_check = []
        for i in perm_list:
            if i in s[0]:
                apk_perm_check.append(1)
            else:
                apk_perm_check.append(0)
        apk_perm_ext2.append([apk_perm_check])

    #print(apk_perm_ext2)
    return apk_perm_ext2   #권한 맵핑 정보 반환 (리스트)
        

def create_np(perm_list):
    """ 다중 배열 기입을 위해 다중 리스트 생성 """
    perm_list_number = len(perm_list)
    arr = np.zeros((0,perm_list_number),int)

    return arr


"""
4. 반복문을 통해 비교하여 존재하는 퍼미션 1로 맵핑
"""
def main(argv, args):
    
    parser.add_argument('-d', help=' : 샘플들이 존재하는 파일 경로') 
    parser.add_argument('-n', help=' : 결과 파일 이름 ex)xxx.csv', default='ML_Mal_APK.csv')
    args = parser.parse_args()
    print('\n')
    print(f'argv : ', argv)
    print(f'args : ', args)
    
    print(f'args.name : ', args.name)
    print(f'args.option : ', args.option)
    print('\n')


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-d', help=' : 샘플들이 존재하는 파일 경로') 
    parser.add_argument('-n', help=' : 결과 파일 이름 ex)xxx.csv', default='ML_Mal_APK.csv')
    args = parser.parse_args()
    sample_dir = args.d
    sample_apk_folder = get_sample_by_dir(sample_dir)
    perm_list = read_csv()
    apk_perm_ext = compare_perm_apk(sample_dir,perm_list)
    row_list = perm_list
    np_box = create_np(perm_list) # np box 생성
    np_box = np.append(np_box, np.array([row_list]),axis=0)
    for i in apk_perm_ext:
        np_box = np.append(np_box, np.array(i),axis=0)
    #print(np_box)
    #for apk_list in sample_apk_folder:
    #    parse_apk_permission(apk_list)
    #np_box = np.append(np_box, np.array([apk_perm_ext]),axis=0)
    #print(np_box)

    
    pd.DataFrame(np_box).to_csv(args.n)








